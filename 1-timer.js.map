{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  startBtn: document.querySelector('[data-start]'),\n  dateInput: document.querySelector('#datetime-picker'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet selectedTime = null;\nlet timerId = null;\n\nflatpickr(refs.dateInput, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const pickedDate = selectedDates[0];\n\n    if (pickedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a future date!',\n        position: 'topRight',\n      });\n      refs.startBtn.disabled = true;\n    } else {\n      selectedTime = pickedDate.getTime();\n      refs.startBtn.disabled = false;\n    }\n  },\n});\n\nrefs.startBtn.addEventListener('click', () => {\n  if (!selectedTime) return;\n\n  refs.startBtn.disabled = true;\n  refs.dateInput.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = Date.now();\n    const delta = selectedTime - now;\n\n    if (delta <= 0) {\n      clearInterval(timerId);\n      updateClock(0);\n      iziToast.success({\n        title: 'Done',\n        message: 'Countdown finished!',\n        position: 'topRight',\n      });\n      return;\n    }\n\n    updateClock(delta);\n  }, 1000);\n});\n\nfunction updateClock(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  refs.days.textContent = addLeadingZero(days);\n  refs.hours.textContent = addLeadingZero(hours);\n  refs.minutes.textContent = addLeadingZero(minutes);\n  refs.seconds.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const sec = 1000;\n  const min = sec * 60;\n  const hour = min * 60;\n  const day = hour * 24;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor((ms % hour) / min),\n    seconds: Math.floor((ms % min) / sec),\n  };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["refs","selectedTime","timerId","flatpickr","selectedDates","pickedDate","iziToast","now","delta","updateClock","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"2GAMA,MAAMA,EAAO,CACX,SAAU,SAAS,cAAc,cAAc,EAC/C,UAAW,SAAS,cAAc,kBAAkB,EACpD,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAe,KACfC,EAAU,KAEdC,EAAUH,EAAK,UAAW,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQI,EAAe,CACrB,MAAMC,EAAaD,EAAc,CAAC,EAE9BC,GAAc,IAAI,MACpBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,+BACT,SAAU,UAClB,CAAO,EACDN,EAAK,SAAS,SAAW,KAEzBC,EAAeI,EAAW,UAC1BL,EAAK,SAAS,SAAW,GAE5B,CACH,CAAC,EAEDA,EAAK,SAAS,iBAAiB,QAAS,IAAM,CACvCC,IAELD,EAAK,SAAS,SAAW,GACzBA,EAAK,UAAU,SAAW,GAE1BE,EAAU,YAAY,IAAM,CAC1B,MAAMK,EAAM,KAAK,MACXC,EAAQP,EAAeM,EAE7B,GAAIC,GAAS,EAAG,CACd,cAAcN,CAAO,EACrBO,EAAY,CAAC,EACbH,EAAS,QAAQ,CACf,MAAO,OACP,QAAS,sBACT,SAAU,UAClB,CAAO,EACD,MACD,CAEDG,EAAYD,CAAK,CAClB,EAAE,GAAI,EACT,CAAC,EAED,SAASC,EAAYC,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDV,EAAK,KAAK,YAAcgB,EAAeL,CAAI,EAC3CX,EAAK,MAAM,YAAcgB,EAAeJ,CAAK,EAC7CZ,EAAK,QAAQ,YAAcgB,EAAeH,CAAO,EACjDb,EAAK,QAAQ,YAAcgB,EAAeF,CAAO,CACnD,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAOA,EAAK,KAAQ,GAAG,EACrC,QAAS,KAAK,MAAOA,EAAK,IAAO,GAAG,CACxC,CACA,CAEA,SAASM,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}